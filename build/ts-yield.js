// Generated by CoffeeScript 1.6.3
(function() {
  var compile, cwd, fs, funcs, out, params, path, writestreamp;

  funcs = require('./functions');

  path = require('path');

  fs = require('fs');

  params = require('commander');

  writestreamp = require('writestreamp');

  params.version('0.2.1').usage('-o <dir> source1 [ source2 ]').option('-w, --watch', 'Watch for file changes').option('-o, --output-dir <dir>', 'Output directory for the built files (required)').parse(process.argv);

  if (!params.outputDir) {
    params.help();
  }

  compile = function(files, cwd, out) {
    return files.forEach(function(source) {
      var exec, file, target;
      file = path.join(cwd, source);
      target = path.join(out, source);
      exec = function(curr, prev) {
        var files_in_dir, o, stats;
        stats = fs.statSync(file);
        if (stats.isFile()) {
          return fs.readFile(file, {
            encoding: 'utf8'
          }, function(arr, content) {
            var destination;
            content = funcs.unwrapYield(content);
            content = funcs.markGenerators(content);
            destination = writestreamp(target);
            return destination.write(content, destination.end.bind(destination));
          });
        } else if (stats.isDirectory()) {
          files_in_dir = fs.readdirSync(file);
          o = path.join(out, source);
          return compile(files_in_dir, file, o);
        }
      };
      if (params.watch) {
        fs.watchFile(file, {
          persistent: true,
          interval: 500
        }, exec);
        return exec();
      } else {
        return exec();
      }
    });
  };

  out = params.outputDir || process.cwd();

  cwd = process.cwd();

  compile(params.args, cwd, out);

}).call(this);
